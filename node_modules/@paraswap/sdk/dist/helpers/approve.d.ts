import type { ConstructProviderFetchInput, TxSendOverrides } from '../types';
import type { Address, PriceString } from './token';
declare type ApproveContractCaller<T> = ConstructProviderFetchInput<T, 'transactCall'>['contractCaller'];
export declare type ApproveToken<T> = (amount: PriceString, tokenAddress: Address, overrides?: TxSendOverrides, signal?: AbortSignal) => Promise<T>;
export declare type GetSpenderAsyncOrSync = (signal?: AbortSignal) => Address | Promise<Address>;
export declare function approveTokenMethodFactory<T>(contractCaller: ApproveContractCaller<T>, getSpender: GetSpenderAsyncOrSync): ApproveToken<T>;
export {};
//# sourceMappingURL=approve.d.ts.map