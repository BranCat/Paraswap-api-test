import type { Address, ConstructFetchInput } from '../../types';
import type { NFTOrderFromAPI, NFTOrdersApiResponse, NFTOrderType } from './helpers/types';
export declare type NFTOrdersUserParams = {
    maker: Address;
    type: NFTOrderType;
} | {
    taker: Address;
    type: NFTOrderType;
};
declare type GetNFTOrderByHash = (orderHash: string, signal?: AbortSignal) => Promise<NFTOrderFromAPI>;
declare type GetNFTOrders = (userParams: NFTOrdersUserParams, signal?: AbortSignal) => Promise<NFTOrdersApiResponse>;
export declare type GetNFTOrdersFunctions = {
    getNFTOrders: GetNFTOrders;
    getNFTOrderByHash: GetNFTOrderByHash;
};
export declare const constructGetNFTOrders: ({ apiURL, chainId, fetcher, }: ConstructFetchInput) => GetNFTOrdersFunctions;
export {};
//# sourceMappingURL=getOrders.d.ts.map