import { BaseFetchUrl, BaseFetchUrlInputConstructor, MinFetchUrl } from '../../common/orders/misc';
import { BuildNFTOrderDataInput, NFTOrderData } from './buildOrderData';
export declare const AssetType: {
    readonly ERC20: 0;
    readonly ERC1155: 1;
    readonly ERC721: 2;
};
export declare function sanitizeOrderData({ nonceAndMeta, expiry, makerAsset: _makerAsset, takerAsset: _takerAsset, maker, taker, makerAmount, takerAmount, makerAssetId, takerAssetId, makerAssetType, takerAssetType, }: NFTOrderData & Partial<Pick<BuildNFTOrderDataInput, 'makerAssetType' | 'takerAssetType'>> & Record<string, any>): NFTOrderData;
export declare type GetOrdersURLs = `${BaseFetchUrl<'nft'>}/${'taker' | 'maker'}/${string}`;
export declare type GetOrderURL = `${MinFetchUrl<'nft'>}/${string}`;
export declare type PostOrderURLs = BaseFetchUrl<'nft'>;
export declare const constructBaseFetchUrlGetter: BaseFetchUrlInputConstructor<'nft'>;
//# sourceMappingURL=misc.d.ts.map