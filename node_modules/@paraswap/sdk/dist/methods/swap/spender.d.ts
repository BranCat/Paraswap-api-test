import type { ConstructFetchInput, Address } from '../../types';
export declare type GetSpender = (signal?: AbortSignal) => Promise<Address>;
declare type GetContracts = (signal?: AbortSignal) => Promise<AdaptersContractsResult>;
export declare type GetSpenderFunctions = {
    getSpender: GetSpender;
    getAugustusSwapper: GetSpender;
    getAugustusRFQ: GetSpender;
    getContracts: GetContracts;
};
interface AdaptersContractsResult {
    AugustusSwapper: string;
    TokenTransferProxy: string;
    AugustusRFQ: string;
}
export declare const constructGetSpender: ({ apiURL, chainId, fetcher, }: ConstructFetchInput) => GetSpenderFunctions;
export {};
//# sourceMappingURL=spender.d.ts.map